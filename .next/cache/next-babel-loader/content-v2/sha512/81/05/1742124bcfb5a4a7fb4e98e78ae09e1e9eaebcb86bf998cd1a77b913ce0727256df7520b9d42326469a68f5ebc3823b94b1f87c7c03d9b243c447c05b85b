{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/macbookpro/Desktop/Projects/Process-map/pages/process-background-information/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { CSVLink } from 'react-csv';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Router from 'next/router';\nimport Docxtemplater from \"docxtemplater\";\nimport PizZip from \"pizzip\";\nimport { saveAs } from \"file-saver\";\nimport { convertObjectToArray } from '../../helpers/convertObjectArray';\nimport { saveProcessData } from '../../store/actions/phaseStore';\nlet PizZipUtils = null;\n\nif (false) {\n  import(\"pizzip/utils/index.js\").then(function (r) {\n    PizZipUtils = r;\n  });\n}\n\nfunction loadFile(url, callback) {\n  PizZipUtils.getBinaryContent(url, callback);\n}\n\nconst ProcessBackgroundInformation = () => {\n  const {\n    register,\n    errors,\n    handleSubmit,\n    reset,\n    setValue\n  } = useForm();\n  const dispatch = useDispatch(); // Use of Refs to target an element\n\n  const btnRef = useRef();\n  const saveRef = useRef();\n  const {\n    0: exportData,\n    1: setExportData\n  } = useState(true);\n  const {\n    0: csvData,\n    1: setCsvData\n  } = useState([]);\n  const theProcessData = useSelector(state => state.phaseData.processInfo);\n  const thePhaseData = useSelector(state => state.phaseData.phases);\n  useEffect(() => {\n    // Check if there is a process data stored upon page load and set to each textareaa respectively\n    if (theProcessData && theProcessData.title) {\n      setValue('title', theProcessData.title);\n    }\n\n    if (theProcessData && theProcessData.doc_num) {\n      setValue('doc_num', theProcessData.doc_num);\n    }\n\n    if (theProcessData && theProcessData.purpose) {\n      setValue('purpose', theProcessData.purpose);\n    }\n\n    if (theProcessData && theProcessData.scope) {\n      setValue('scope', theProcessData.scope);\n    }\n\n    if (theProcessData && theProcessData.accountability) {\n      setValue('accountability', theProcessData.accountability);\n    }\n\n    if (theProcessData && theProcessData.responsibility) {\n      setValue('responsibility', theProcessData.responsibility);\n    }\n\n    if (theProcessData && theProcessData.references) {\n      setValue('references', theProcessData.references);\n    }\n\n    if (theProcessData && theProcessData.definitions) {\n      setValue('definitions', theProcessData.definitions);\n    }\n  }, [theProcessData]);\n\n  const generateDocument = phase => {\n    console.log({\n      phase\n    });\n    loadFile(\"/lib/SOP-template.docx\", function (error, content) {\n      if (error) {\n        throw error;\n      }\n\n      const zip = new PizZip(content);\n      const doc = new Docxtemplater().loadZip(zip); // render the document (replace all occurences of {first_name} by John, {last_name} by Doe, ...)\n\n      doc.render(_objectSpread(_objectSpread({}, theProcessData), {}, {\n        phases: phase\n      }));\n      const out = doc.getZip().generate({\n        type: \"blob\",\n        mimeType: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n      }); // Output the document using Data-URI\n\n      saveAs(out, \"Generated-SOP.docx\");\n    });\n  }; // Headers for csv export\n\n\n  const headers = [{\n    label: 'Information',\n    key: 'information'\n  }, {\n    label: 'Value',\n    key: 'value'\n  }]; // CSV export object\n\n  const csvReport = {\n    filename: 'process-background.csv',\n    headers: headers,\n    data: csvData\n  }; // Function to export process background information\n\n  const exportBackgroundInformation = async data => {\n    // Convert Object to an array for easy export\n    const array = convertObjectToArray(data);\n    await setCsvData(array);\n    btnRef.current.link.click();\n    reset({}); // if export data is true, clear export data that is stored\n\n    if (exportData) {\n      dispatch(saveProcessData(null));\n    }\n  }; // Function to save process background information\n\n\n  const saveprocessBackgroundInfo = async data => {\n    // If exporting data is set to false upon initiating go back, store data to store\n    if (!exportData) {\n      await dispatch(saveProcessData(data));\n      return;\n    } // Else export data immediately\n\n\n    await exportBackgroundInformation(data);\n  }; // Function to intiate going back\n\n\n  const gotoHome = async () => {\n    await setExportData(false);\n    await saveRef.current.click();\n    setTimeout(() => {\n      Router.push('/');\n    }, 200);\n  };\n\n  const generateSOPHandler = async () => {\n    let dataToExport = [];\n    await thePhaseData.forEach(phase => {\n      phase.cards.forEach(card => {\n        dataToExport.push({\n          'phase': phase.title,\n          'action': card.title,\n          'responsible': card.description,\n          'output': card.label ? card.label : '',\n          'notes': card.metadata ? card.metadata : ''\n        });\n      });\n    });\n\n    if (dataToExport.length > 0) {\n      console.log({\n        dataToExport\n      });\n      generateDocument(dataToExport);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"process-bg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 mt-5\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: gotoHome,\n                className: \"go-back\",\n                children: \"Go back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Process Background Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit(saveprocessBackgroundInfo),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mb-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"thead pl-3\",\n                      children: \"Information\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-7 pl-sm-2 pr-sm-0 mb-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"thead pl-3\",\n                      children: \"Value\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-3 pr-sm-0\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Title\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-7 pl-sm-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      name: \"title\",\n                      id: \"title\",\n                      cols: \"30\",\n                      rows: \"3\",\n                      placeholder: \"User inputs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Doc_Num\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      name: \"doc_num\",\n                      id: \"doc_num\",\n                      cols: \"30\",\n                      rows: \"3\",\n                      placeholder: \"User inputs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Purpose\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      name: \"purpose\",\n                      id: \"purpose\",\n                      cols: \"30\",\n                      rows: \"3\",\n                      placeholder: \"User inputs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Scope\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      name: \"scope\",\n                      id: \"scope\",\n                      cols: \"30\",\n                      rows: \"3\",\n                      placeholder: \"User inputs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Accountability\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      name: \"accountability\",\n                      id: \"accountability\",\n                      cols: \"30\",\n                      rows: \"3\",\n                      placeholder: \"User inputs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Responsibility\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      name: \"responsibility\",\n                      id: \"responsibility\",\n                      cols: \"30\",\n                      rows: \"3\",\n                      placeholder: \"User inputs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"References\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      name: \"references\",\n                      id: \"references\",\n                      cols: \"30\",\n                      rows: \"3\",\n                      placeholder: \"User inputs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-3 pr-sm-0 mt-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"thead bg-green pl-3\",\n                      children: \"Definitions\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-7 pl-sm-2 mt-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      ref: register(),\n                      className: \"input-field\",\n                      name: \"definitions\",\n                      id: \"definitions\",\n                      cols: \"30\",\n                      rows: \"3\",\n                      placeholder: \"User inputs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex align-items-center justify-content-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    ref: saveRef,\n                    type: \"submit\",\n                    className: \"btn btn-green mt-4\",\n                    children: \"Export to data frame\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: generateSOPHandler,\n                    type: 'button',\n                    className: \"btn btn-green mt-4\",\n                    children: \"Generate SOP\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CSVLink, _objectSpread(_objectSpread({\n                className: \"d-none\",\n                ref: btnRef\n              }, csvReport), {}, {\n                children: \"Export\"\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\nexport default ProcessBackgroundInformation;","map":{"version":3,"sources":["/Users/macbookpro/Desktop/Projects/Process-map/pages/process-background-information/index.js"],"names":["React","useState","useRef","useEffect","useForm","CSVLink","useSelector","useDispatch","Router","Docxtemplater","PizZip","saveAs","convertObjectToArray","saveProcessData","PizZipUtils","then","r","loadFile","url","callback","getBinaryContent","ProcessBackgroundInformation","register","errors","handleSubmit","reset","setValue","dispatch","btnRef","saveRef","exportData","setExportData","csvData","setCsvData","theProcessData","state","phaseData","processInfo","thePhaseData","phases","title","doc_num","purpose","scope","accountability","responsibility","references","definitions","generateDocument","phase","console","log","error","content","zip","doc","loadZip","render","out","getZip","generate","type","mimeType","headers","label","key","csvReport","filename","data","exportBackgroundInformation","array","current","link","click","saveprocessBackgroundInfo","gotoHome","setTimeout","push","generateSOPHandler","dataToExport","forEach","cards","card","description","metadata","length"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { CSVLink } from 'react-csv';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Router from 'next/router';\nimport Docxtemplater from \"docxtemplater\";\nimport PizZip from \"pizzip\";\nimport { saveAs } from \"file-saver\";\n\nimport { convertObjectToArray } from '../../helpers/convertObjectArray';\nimport { saveProcessData } from '../../store/actions/phaseStore';\n\nlet PizZipUtils = null;\nif (typeof window !== \"undefined\") {\n    import(\"pizzip/utils/index.js\").then(function (r) {\n        PizZipUtils = r;\n    });\n}\n\nfunction loadFile(url, callback) {\n    PizZipUtils.getBinaryContent(url, callback);\n}\n\nconst ProcessBackgroundInformation = () => {\n    const {register, errors, handleSubmit, reset, setValue} = useForm();\n\n    const dispatch = useDispatch();\n\n    // Use of Refs to target an element\n    const btnRef = useRef();\n    const saveRef = useRef();\n\n    const [exportData, setExportData] = useState(true);\n    const [ csvData, setCsvData ] = useState([]);\n\n    const theProcessData = useSelector(state => state.phaseData.processInfo);\n    const thePhaseData = useSelector(state => state.phaseData.phases);\n\n    useEffect(() => {\n        // Check if there is a process data stored upon page load and set to each textareaa respectively\n        if (theProcessData && theProcessData.title) {\n            setValue('title', theProcessData.title);\n        }  \n\n        if (theProcessData && theProcessData.doc_num) {\n            setValue('doc_num', theProcessData.doc_num);\n        } \n\n        if (theProcessData && theProcessData.purpose) {\n            setValue('purpose', theProcessData.purpose);\n        }\n\n        if (theProcessData && theProcessData.scope) {\n            setValue('scope', theProcessData.scope);\n        } \n        if (theProcessData && theProcessData.accountability) {\n            setValue('accountability', theProcessData.accountability);\n        }  \n\n        if (theProcessData && theProcessData.responsibility) {\n            setValue('responsibility', theProcessData.responsibility);\n        } \n\n        if (theProcessData && theProcessData.references) {\n            setValue('references', theProcessData.references);\n        }\n\n        if (theProcessData && theProcessData.definitions) {\n            setValue('definitions', theProcessData.definitions);\n        } \n    }, [theProcessData]);\n\n    const generateDocument = (phase) => {\n        console.log({phase});\n        loadFile(\n            \"/lib/SOP-template.docx\",\n            function (error, content) {\n                if (error) {\n                    throw error;\n                }\n                const zip = new PizZip(content);\n                const doc = new Docxtemplater().loadZip(zip);\n                // render the document (replace all occurences of {first_name} by John, {last_name} by Doe, ...)\n                doc.render({\n                   ...theProcessData,\n                   phases: phase\n                });\n                const out = doc.getZip().generate({\n                    type: \"blob\",\n                    mimeType:\n                        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n                });\n                // Output the document using Data-URI\n                saveAs(out, \"Generated-SOP.docx\");\n            }\n        );\n    };    \n\n     // Headers for csv export\n    const headers = [\n        {label: 'Information', key: 'information'},\n        {label: 'Value', key: 'value'}\n    ];\n\n    // CSV export object\n    const csvReport = {\n        filename: 'process-background.csv',\n        headers: headers,\n        data: csvData\n    };\n\n    // Function to export process background information\n    const exportBackgroundInformation = async (data) => {\n        \n        // Convert Object to an array for easy export\n        const array = convertObjectToArray(data)\n        await setCsvData(array);\n        btnRef.current.link.click();\n        reset({});\n\n        // if export data is true, clear export data that is stored\n        if (exportData) {\n            dispatch(saveProcessData(null));\n        }\n    };\n\n    // Function to save process background information\n    const saveprocessBackgroundInfo = async (data) => {\n        // If exporting data is set to false upon initiating go back, store data to store\n        if (!exportData) {\n            await dispatch(saveProcessData(data));  \n            return;\n        }\n        // Else export data immediately\n        await exportBackgroundInformation(data);\n    };\n\n    // Function to intiate going back\n    const gotoHome = async () => {\n        await setExportData(false);\n        await saveRef.current.click();\n        setTimeout(() => {\n            Router.push('/');     \n        }, 200);\n    };\n\n    const generateSOPHandler = async () => {\n        let dataToExport = [];\n        await thePhaseData.forEach(phase => {\n            phase.cards.forEach(card => {\n                dataToExport.push({\n                    'phase': phase.title,\n                    'action': card.title,\n                    'responsible': card.description,\n                    'output': card.label ? card.label : '',\n                    'notes': card.metadata ? card.metadata : ''\n                });\n            })\n        });\n        if (dataToExport.length > 0) {\n            console.log({dataToExport});\n            generateDocument(dataToExport);\n        }\n    };\n\n    return (\n        <>\n            <section className='process-bg'>\n                <div className=\"container\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-12 mt-5\">\n                                <a onClick={gotoHome} className=\"go-back\">\n                                    Go back\n                                </a>\n                            </div>\n                            <div className=\"col-12\">\n                                <h1>Process Background Information</h1>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <form onSubmit={handleSubmit(saveprocessBackgroundInfo)}>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-3 pr-sm-0 mb-2\">\n                                            <p className='thead pl-3'>Information</p>        \n                                        </div>\n                                        <div className=\"col-md-7 pl-sm-2 pr-sm-0 mb-2\">\n                                            <p className='thead pl-3'>Value</p>\n                                        </div>\n                                        <div className=\"col-md-3 pr-sm-0\">\n                                            <p className='thead bg-green pl-3'>Title</p>        \n                                        </div>\n                                        <div className=\"col-md-7 pl-sm-2\">\n                                            <textarea ref={register()} className='input-field' name=\"title\" id=\"title\" cols=\"30\" rows=\"3\" placeholder='User inputs'/>\n                                            {/* <input ref={register()} className='input-field' type=\"text\" name=\"title\" placeholder='User inputs' /> */}\n                                        </div>\n                                        <div className=\"col-md-3 pr-sm-0 mt-2\">\n                                            <p className='thead bg-green pl-3'>Doc_Num</p>        \n                                        </div>\n                                        <div className=\"col-md-7 pl-sm-2 mt-2\">\n                                            <textarea ref={register()} className='input-field' name=\"doc_num\" id=\"doc_num\" cols=\"30\" rows=\"3\" placeholder='User inputs'></textarea>\n                                            {/* <input ref={register()} className='input-field' type=\"text\" name=\"doc_num\" placeholder='User inputs' /> */}\n                                        </div>\n                                        <div className=\"col-md-3 pr-sm-0 mt-2\">\n                                            <p className='thead bg-green pl-3'>Purpose</p>        \n                                        </div>\n                                        <div className=\"col-md-7 pl-sm-2 mt-2\">\n                                            <textarea ref={register()} className='input-field' name=\"purpose\" id=\"purpose\" cols=\"30\" rows=\"3\" placeholder='User inputs'/>\n                                            {/* <input ref={register()} className='input-field' type=\"text\" name=\"purpose\" placeholder='User inputs' /> */}\n                                        </div>\n                                        <div className=\"col-md-3 pr-sm-0 mt-2\">\n                                            <p className='thead bg-green pl-3'>Scope</p>        \n                                        </div>\n                                        <div className=\"col-md-7 pl-sm-2 mt-2\">\n                                            <textarea ref={register()} className='input-field' name=\"scope\" id=\"scope\" cols=\"30\" rows=\"3\" placeholder='User inputs'/>\n                                            {/* <input ref={register()} className='input-field' type=\"text\" name=\"scope\" placeholder='User inputs' /> */}\n                                        </div>\n                                        <div className=\"col-md-3 pr-sm-0 mt-2\">\n                                            <p className='thead bg-green pl-3'>Accountability</p>        \n                                        </div>\n                                        <div className=\"col-md-7 pl-sm-2 mt-2\">\n                                            <textarea ref={register()} className='input-field' name=\"accountability\" id=\"accountability\" cols=\"30\" rows=\"3\" placeholder='User inputs'/>\n                                            {/* <input ref={register()} className='input-field' type=\"text\" name=\"accountability\" placeholder='User inputs' /> */}\n                                        </div>\n                                        <div className=\"col-md-3 pr-sm-0 mt-2\">\n                                            <p className='thead bg-green pl-3'>Responsibility</p>        \n                                        </div>\n                                        <div className=\"col-md-7 pl-sm-2 mt-2\">\n                                            <textarea ref={register()} className='input-field' name=\"responsibility\" id=\"responsibility\" cols=\"30\" rows=\"3\" placeholder='User inputs'/>\n                                            {/* <input ref={register()} className='input-field' type=\"text\" name=\"responsibility\" placeholder='User inputs' /> */}\n                                        </div>\n                                        <div className=\"col-md-3 pr-sm-0 mt-2\">\n                                            <p className='thead bg-green pl-3'>References</p>        \n                                        </div>\n                                        <div className=\"col-md-7 pl-sm-2 mt-2\">\n                                            <textarea ref={register()} className='input-field' name=\"references\" id=\"references\" cols=\"30\" rows=\"3\" placeholder='User inputs'/>\n                                            {/* <input ref={register()} className='input-field' type=\"text\" name=\"references\" placeholder='User inputs' /> */}\n                                        </div>\n                                        <div className=\"col-md-3 pr-sm-0 mt-2\">\n                                            <p className='thead bg-green pl-3'>Definitions</p>        \n                                        </div>\n                                        <div className=\"col-md-7 pl-sm-2 mt-2\">\n                                            <textarea ref={register()} className='input-field' name=\"definitions\" id=\"definitions\" cols=\"30\" rows=\"3\" placeholder='User inputs'/>\n                                            {/* <input ref={register()} className='input-field' type=\"text\" name=\"definitions\" placeholder='User inputs' /> */}\n                                        </div>\n                                    </div>\n                                    <div className=\"d-flex align-items-center justify-content-between\">\n                                        <button ref={saveRef} type='submit' className=\"btn btn-green mt-4\">Export to data frame</button>\n                                        <button onClick={generateSOPHandler} type={'button'} className=\"btn btn-green mt-4\">Generate SOP</button>\n                                    </div>\n                                </form>\n                                <CSVLink className='d-none' ref={btnRef} {...csvReport}>Export</CSVLink>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n};\n\nexport default ProcessBackgroundInformation;"]},"metadata":{},"sourceType":"module"}